diff --git a/Makefile b/Makefile
index 6998388884..a3b9c8e632 100644
--- a/Makefile
+++ b/Makefile
@@ -1381,7 +1381,7 @@ MKIMAGEFLAGS_u-boot.img = -f auto -A $(ARCH) -T firmware -C none -O u-boot \
 	$(patsubst %,-b arch/$(ARCH)/dts/%.dtb,$(subst ",,$(CONFIG_OF_LIST))) \
 	$(patsubst %,-b arch/$(ARCH)/dts/%.dtbo,$(subst ",,$(CONFIG_OF_OVERLAY_LIST)))
 else
-MKIMAGEFLAGS_u-boot.img = -A $(ARCH) -T firmware -C none -O u-boot \
+MKIMAGEFLAGS_u-boot.img = -A $(ARCH) -T gpimage -C none -O u-boot \
 	-a $(CONFIG_SYS_TEXT_BASE) -e $(CONFIG_SYS_UBOOT_START) \
 	-n "U-Boot $(UBOOTRELEASE) for $(BOARD) board"
 MKIMAGEFLAGS_u-boot-ivt.img = -A $(ARCH) -T firmware_ivt -C none -O u-boot \
diff --git a/arch/arm/mach-omap2/am33xx/Kconfig b/arch/arm/mach-omap2/am33xx/Kconfig
index 1402376915..eaf2d0a419 100644
--- a/arch/arm/mach-omap2/am33xx/Kconfig
+++ b/arch/arm/mach-omap2/am33xx/Kconfig
@@ -31,9 +31,9 @@ config TARGET_AM335X_EVM
 	bool "Support am335x_evm"
 	select BOARD_LATE_INIT
 	select DM
-	select DM_GPIO
+#	select DM_GPIO
 	select DM_SERIAL
-	select TI_I2C_BOARD_DETECT
+#	select TI_I2C_BOARD_DETECT
 	select SUPPORT_EXTENSION_SCAN
 	imply CMD_DM
 	imply SPL_DM
diff --git a/board/ti/am335x/board.c b/board/ti/am335x/board.c
index 9b7067040a..e88074c822 100644
--- a/board/ti/am335x/board.c
+++ b/board/ti/am335x/board.c
@@ -890,52 +890,52 @@ int board_late_init(void)
 #endif
 
 /* CPSW plat */
-#if !CONFIG_IS_ENABLED(OF_CONTROL)
-struct cpsw_slave_data slave_data[] = {
-	{
-		.slave_reg_ofs  = CPSW_SLAVE0_OFFSET,
-		.sliver_reg_ofs = CPSW_SLIVER0_OFFSET,
-		.phy_addr       = 0,
-	},
-	{
-		.slave_reg_ofs  = CPSW_SLAVE1_OFFSET,
-		.sliver_reg_ofs = CPSW_SLIVER1_OFFSET,
-		.phy_addr       = 1,
-	},
-};
-
-struct cpsw_platform_data am335_eth_data = {
-	.cpsw_base		= CPSW_BASE,
-	.version		= CPSW_CTRL_VERSION_2,
-	.bd_ram_ofs		= CPSW_BD_OFFSET,
-	.ale_reg_ofs		= CPSW_ALE_OFFSET,
-	.cpdma_reg_ofs		= CPSW_CPDMA_OFFSET,
-	.mdio_div		= CPSW_MDIO_DIV,
-	.host_port_reg_ofs	= CPSW_HOST_PORT_OFFSET,
-	.channels		= 8,
-	.slaves			= 2,
-	.slave_data		= slave_data,
-	.ale_entries		= 1024,
-	.mac_control		= 0x20,
-	.active_slave		= 0,
-	.mdio_base		= 0x4a101000,
-	.gmii_sel		= 0x44e10650,
-	.phy_sel_compat		= "ti,am3352-cpsw-phy-sel",
-	.syscon_addr		= 0x44e10630,
-	.macid_sel_compat	= "cpsw,am33xx",
-};
-
-struct eth_pdata cpsw_pdata = {
-	.iobase = 0x4a100000,
-	.phy_interface = 0,
-	.priv_pdata = &am335_eth_data,
-};
-
-U_BOOT_DRVINFO(am335x_eth) = {
-	.name = "eth_cpsw",
-	.plat = &cpsw_pdata,
-};
-#endif
+/* #if !CONFIG_IS_ENABLED(OF_CONTROL)
+ * struct cpsw_slave_data slave_data[] = {
+ * 	{
+ * 		.slave_reg_ofs  = CPSW_SLAVE0_OFFSET,
+ * 		.sliver_reg_ofs = CPSW_SLIVER0_OFFSET,
+ * 		.phy_addr       = 0,
+ * 	},
+ * 	{
+ * 		.slave_reg_ofs  = CPSW_SLAVE1_OFFSET,
+ * 		.sliver_reg_ofs = CPSW_SLIVER1_OFFSET,
+ * 		.phy_addr       = 1,
+ * 	},
+ * };
+ * 
+ * struct cpsw_platform_data am335_eth_data = {
+ * 	.cpsw_base		= CPSW_BASE,
+ * 	.version		= CPSW_CTRL_VERSION_2,
+ * 	.bd_ram_ofs		= CPSW_BD_OFFSET,
+ * 	.ale_reg_ofs		= CPSW_ALE_OFFSET,
+ * 	.cpdma_reg_ofs		= CPSW_CPDMA_OFFSET,
+ * 	.mdio_div		= CPSW_MDIO_DIV,
+ * 	.host_port_reg_ofs	= CPSW_HOST_PORT_OFFSET,
+ * 	.channels		= 8,
+ * 	.slaves			= 2,
+ * 	.slave_data		= slave_data,
+ * 	.ale_entries		= 1024,
+ * 	.mac_control		= 0x20,
+ * 	.active_slave		= 0,
+ * 	.mdio_base		= 0x4a101000,
+ * 	.gmii_sel		= 0x44e10650,
+ * 	.phy_sel_compat		= "ti,am3352-cpsw-phy-sel",
+ * 	.syscon_addr		= 0x44e10630,
+ * 	.macid_sel_compat	= "cpsw,am33xx",
+ * };
+ * 
+ * struct eth_pdata cpsw_pdata = {
+ * 	.iobase = 0x4a100000,
+ * 	.phy_interface = 0,
+ * 	.priv_pdata = &am335_eth_data,
+ * };
+ * 
+ * U_BOOT_DRVINFO(am335x_eth) = {
+ * 	.name = "eth_cpsw",
+ * 	.plat = &cpsw_pdata,
+ * };
+ * #endif */
 
 #ifdef CONFIG_SPL_LOAD_FIT
 int board_fit_config_name_match(const char *name)
diff --git a/common/board_f.c b/common/board_f.c
index a68760092a..f186c3039b 100644
--- a/common/board_f.c
+++ b/common/board_f.c
@@ -9,6 +9,8 @@
  * Marius Groeger <mgroeger@sysgo.de>
  */
 
+#define DEBUG
+
 #include <common.h>
 #include <bloblist.h>
 #include <bootstage.h>
@@ -817,6 +819,14 @@ __weak int clear_bss(void)
 	return 0;
 }
 
+int __report_progress() {
+  static int count = 0;
+  printf("progress %d\n", count);
+  ++count;
+  return 0;
+}
+
+
 static const init_fnc_t init_sequence_f[] = {
 	setup_mon_len,
 #ifdef CONFIG_OF_CONTROL
@@ -888,7 +898,7 @@ static const init_fnc_t init_sequence_f[] = {
 	announce_dram_init,
 	dram_init,		/* configure available RAM banks */
 #ifdef CONFIG_POST
-	post_init_f,
+	post_init_f,//
 #endif
 	INIT_FUNC_WATCHDOG_RESET
 #if defined(CONFIG_SYS_DRAM_TEST)
diff --git a/include/initcall.h b/include/initcall.h
index 69ce268070..be39318035 100644
--- a/include/initcall.h
+++ b/include/initcall.h
@@ -26,6 +26,7 @@ static inline int initcall_run_list(const init_fnc_t init_sequence[])
 	for (init_fnc_ptr = init_sequence; *init_fnc_ptr; ++init_fnc_ptr) {
 		unsigned long reloc_ofs = 0;
 		int ret;
+		__report_progress();
 
 		/*
 		 * Sandbox is relocated by the OS, so symbols always appear at
